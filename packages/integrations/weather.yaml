---
# Weather

# fetch weather data from a local weather station (Vlinder project)
rest:
  resource: !secret vlinder_weather_station
  scan_interval: 60
  sensor:
    - name: "vlinder_data_temperature"
      value_template: '{{ value_json["primary"]["dt"] }}'
      unit_of_measurement: '°C'
      state_class: measurement
    - name: "vlinder_data_wind_speed"
      value_template: '{{ value_json["primary"]["dws"] }}'
      unit_of_measurement: 'km/h'
      state_class: measurement
    - name: "vlinder_data_wind_direction"
      value_template: '{{ value_json["primary"]["dwd"] }}'
      state_class: measurement
    - name: "vlinder_data_humidity"
      value_template: '{{ value_json["primary"]["dh"] }}'
      unit_of_measurement: '%'
      state_class: measurement
    - name: "vlinder_data_pressure"
      value_template: '{{ value_json["primary"]["dm"] }}'
      unit_of_measurement: 'hPa'
      state_class: measurement
    - name: "vlinder_data_rainfall"
      value_template: '{{ value_json["primary"]["drr"] }}'
      unit_of_measurement: 'mm/h'
      state_class: measurement

# meteo Alarm sensor for Antwerp, Belgium
binary_sensor:
  - platform: meteoalarm
    country: "belgium"
    province: "Antwerp"
    language: "nl-BE"

sensor:
    # average indoor temperature
  - platform: min_max
    name: Average indoor temperature
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.hue_motion_sensor_3_temperature
      - sensor.hue_motion_sensor_4_temperature
      - sensor.hue_motion_sensor_5_temperature

  - platform: template
    sensors:
      vlinder_wind_direction_orientation:
        value_template: >
          {% set direction = ['N', 'NNO', 'NO', 'ONO', 'O', 'OZO', 'ZO', 'ZZO', 'Z', 'ZZW', 'ZW', 'WZW', 'W', 'WNW', 'NW', 'NNW', 'N'] %}
          {% set degree = states('sensor.vlinder_data_wind_direction') | float %}
          {{ direction[((degree + 11.25) / 22.5) | int] }}

template:
  - trigger:
    - platform: time_pattern
      minutes: "/1"
    sensor:
      # calculate the wind chill temperature index based on input from a local weather station 
      - name: "vlinder_wcti"
        unit_of_measurement: "°C"
        state: >
          {% set outdoor_t = states('sensor.vlinder_data_temperature') | float %}
          {% set outdoor_ws = states('sensor.vlinder_data_wind_speed') | float %}
          {% if outdoor_ws > 1 %}
            {{ '%0.1f' | format(13.12 + 0.6215 * outdoor_t - 11.37 * outdoor_ws**0.16 + 0.3965 * outdoor_t * outdoor_ws**0.16) }}
          {% else %} 
            {{ outdoor_t }}
          {% endif %}
          
automation:
    # send notification on severe weather warnings
  - alias: 'notification - severe weather'
    id: weather_severe_weather_notification
    trigger:
      - platform: state
        entity_id: binary_sensor.meteoalarm
        from: 'off'
    action:
      - service: notify.parents_phone_app
        data:
          title: "{{state_attr('binary_sensor.meteoalarm', 'headline')}}"
          message: "{{state_attr('binary_sensor.meteoalarm', 'description')}} vanaf {{state_attr('binary_sensor.meteoalarm', 'effective')}}"
